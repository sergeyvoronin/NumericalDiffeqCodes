Sergey Voronin

These C++ programs solve the wave equation problem as posed in the included pdf file, using the standard and the non-standard finite difference algorithms. The matlab program make_plots.m, makes a series of surface plots to help one visualize the results. 

The driver uses the supplied finiteDiff.cpp class to obtain approximations to the 
wave equation ibvp on a square grid (with x and t spacing of 0.1 - these are adjustable parameters). The STLMatrix.cpp class is used as a utility class for the storage structures. The driver produces a summary of the absolute error results at the end of its run.
A table series of tables are printed in the directory data_files/ at the end of each run.

To run and compile the driver with Intel ICC compiler, use:

1) icc -Os -o fdd fdDriver.cpp -lm
2) # ./fdd

After this is done, you may run the script make_plots.m from within Matlab to make 
the surface solution and error plots.


$ source /opt/intel/bin/iccvars.sh intel64
$ icc -Os -o fdd fdDriver.cpp -lm
$ ./fdd
Starting..

*** CONSTANT COEFFICIENT CASE - STANDARD ALGORITHM ***

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.1 &amp; k = 0.02

        max error # 0 = 1.70233

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.025 &amp; k = 0.005

        max error # 1 = 0.474448

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.00625 &amp; k = 0.00125

        max error # 2 = 0.0351087

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.0015625 &amp; k = 0.0003125

        max error # 3 = 0.00220772

Error Ratios:
0.278705        0.0739992       0.0628823


*** CONSTANT COEFFICIENT CASE - NON-STANDARD ALGORITHM ***

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.1 &amp; k = 0.02

        max error # 0 = 5.88418e-15

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.025 &amp; k = 0.005

        max error # 1 = 1.21569e-14

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.00625 &amp; k = 0.00125

        max error # 2 = 1.08599e-11

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.0015625 &amp; k = 0.0003125

        max error # 3 = 2.90296e-11

Error Ratios:
2.06604 893.306 2.6731


*** VARIABLE COEFFICIENT CASE - STANDARD ALGORITHM ***

setting up exact table.. (this may take a while)
setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.1 &amp; k = 0.02

        max error # 0 = 2.23651

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.025 &amp; k = 0.005

        max error # 1 = 2.43195

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.00625 &amp; k = 0.00125

        max error # 2 = 0.177339

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.0015625 &amp; k = 0.0003125

        max error # 3 = 0.00461427

Error Ratios:
1.08739 0.0729206       0.0260195


*** VARIABLE COEFFICIENT CASE - NON-STANDARD ALGORITHM ***

setting up exact (fine approx) table.. (this may take a while)
setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.1 &amp; k = 0.02

        max error # 0 = 1.67266

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.025 &amp; k = 0.005

        max error # 1 = 1.41017

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.00625 &amp; k = 0.00125

        max error # 2 = 0.107026

setting up structures..
starting finite differences..
U(i,0) ------&gt;

U(i,1) ------&gt;

U(i,j+1) ------&gt;

h = 0.0015625 &amp; k = 0.0003125

        max error # 3 = 0.00302464

Error Ratios:
0.843068        0.0758959       0.0282608


Summary of Errors for Our Problem:

f(x) = sin(8*pi*x)   g(x) = 0   v_constant = 2   v_variable(x) = 1 + x^2   w = 8*pi

*** Constant Coefficient Errors (STD &amp; NON-STD) ***

Standard Algorithm Errors:
h = 0.1 		k = 0.02        max absolute error = 1.70233
h = 0.025       k = 0.005       max absolute error = 0.474448
h = 0.00625     k = 0.00125     max absolute error = 0.0351087
h = 0.0015625   k = 0.0003125   max absolute error = 0.00220772

Non-Standard Algorithm Errors:
h = 0.1 k = 0.02        max absolute error = 5.88418e-15
h = 0.025       k = 0.005       max absolute error = 1.21569e-14
h = 0.00625     k = 0.00125     max absolute error = 1.08599e-11
h = 0.0015625   k = 0.0003125   max absolute error = 2.90296e-11


*** Variable Coefficient Errors (STD &amp; NON-STD) ***

Standard Algorithm Errors:
h = 0.1 		k = 0.02        max absolute error = 2.23651
h = 0.025       k = 0.005       max absolute error = 2.43195
h = 0.00625     k = 0.00125     max absolute error = 0.177339
h = 0.0015625   k = 0.0003125   max absolute error = 0.00461427

Non-Standard Algorithm Errors:
h = 0.1 		k = 0.02        max absolute error = 1.67266
h = 0.025       k = 0.005       max absolute error = 1.41017
h = 0.00625     k = 0.00125     max absolute error = 0.107026
h = 0.0015625   k = 0.0003125   max absolute error = 0.00302464

processor time used: 9.12 sec
$
